<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <title>Atualizar conteúdo</title>
</head>
<body class="bg-gray-100 p-8">

  
  <form action="/admin/atualizar-conteudo" method="post" enctype="multipart/form-data" class="max-w-xl mx-auto bg-white p-6 rounded-md shadow-md">
    <h1 class="text-2xl font-bold mb-4">Atualizar conteúdo</h1>

    <div class="mb-4">
      <label for="id" class="block text-sm font-medium text-gray-600">Conteúdo:</label>
      <select name="id" id="id" required class="mt-1 p-2 w-full border rounded-md" onchange="sendPostRequest(this)">
        <option value="" disabled selected >Escolha o conteúdo</option>
        <% conteudos.forEach(element => { %>
         
          <option value="<%= element._id %>"><%= element.name %></option>
        <% }) %>
      </select>
    </div>

    <div class="mb-4">
      <label for="name" class="block text-sm font-medium text-gray-600">Nome:</label>
      <input type="text" id="name" name="name" required class="mt-1 p-2 w-full border rounded-md">
    </div>

    <div class="mb-4">
      <label for="type" class="block text-sm font-medium text-gray-600">Tipo:</label>
      <select name="type" id="type" required class="mt-1 p-2 w-full border rounded-md">
        <option value="" disabled selected >Escolha o tipo</option>
        <option value="serie">Série</option>
        <option value="film">Filme</option>
      </select>
    </div>

    <div class="mb-4">
      <label for="releaseYear" class="block text-sm font-medium text-gray-600">Ano de Lançamento:</label>
      <input type="number" id="releaseYear" name="releaseYear"  class="mt-1 p-2 w-full border rounded-md">
    </div>

    <div class="mb-4">
      <label for="genre" class="block text-sm font-medium text-gray-600">Gênero:</label>
      <input type="text" id="genre" name="genre"  class="mt-1 p-2 w-full border rounded-md">
    </div>

    <div class="mb-4">
      <label for="creator" class="block text-sm font-medium text-gray-600">Criador:</label>
      <input type="text" id="creator" name="creator"  class="mt-1 p-2 w-full border rounded-md">
    </div>

    <div class="mb-4">
      <label for="rating" class="block text-sm font-medium text-gray-600">Avaliação:</label>
      <input type="text" id="rating" name="rating"  class="mt-1 p-2 w-full border rounded-md">
    </div>

    <div class="mb-4">
      <label for="synopsis" class="block text-sm font-medium text-gray-600">Sinopse:</label>
      <textarea id="synopsis" name="synopsis"  class="mt-1 p-2 w-full border rounded-md"></textarea>
    </div>

    <div class="mb-4  duration-500">
      <img id="imagePreview" src="" alt="" class="w-52 h-72 object-cover hidden m-auto my-4 duration-500">
      <label for="image" class="block text-sm font-medium text-gray-600 duration-500">Imagem:</label>
      <input type="file" id="image" name="image" accept="image/*" class="mt-1 duration-500"  onchange="previewImage(this)">
    </div>

    <div class="mt-4">
      <input type="submit" value="Salvar" class="bg-blue-500 w-full text-white p-2 rounded-md cursor-pointer">
    </div>

    <a href="/" class="my-2 text-blue-600 text-sm hover:underline">Ir para Home</a>

  </form>
</body>
</html>


<script>
  function previewImage(input) {
    var imagePreview = document.getElementById('imagePreview');
    if (input.files && input.files[0]) {
      var reader = new FileReader();
      reader.onload = function(e) {
        imagePreview.src = e.target.result;
        imagePreview.classList.remove('hidden'); // Exibe a imagem
      };
      reader.readAsDataURL(input.files[0]);
    }
  }




  function sendPostRequest(selectElement) {
    const selectedValue = selectElement.value;
    console.log(selectedValue)
    if (selectedValue) {
      fetch('/metadata/metadataId/' + selectedValue, {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
        },
        
      })
      .then(response => response.json())
      .then(data => {
        preencherDados(data)
        console.log(data);
      })
      .catch(error => {
        console.error( error);
      });
    }
  }


  function preencherDados(data){

    document.getElementById('imagePreview').classList.remove('hidden')
    document.getElementById('imagePreview').src = data.image ? data.image : ''
    document.getElementById('name').value = data.name ? data.name : ''
    document.getElementById('type').value = data.type ? data.type : ''
    document.getElementById('releaseYear').value = data.releaseYear ? data.releaseYear : ''
    document.getElementById('genre').value = data.genre ? data.genre : ''
    document.getElementById('creator').value = data.creator ? data.creator : ''
    document.getElementById('rating').value = data.rating ? data.rating : ''
    document.getElementById('synopsis').value = data.synopsis ? data.synopsis : ''
    document.getElementById('synopsis').innerText = data.synopsis ? data.synopsis : ''
  }

</script>